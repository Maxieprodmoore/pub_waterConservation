{"mappings":"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","sources":["node_modules/@splidejs/splide/dist/js/splide.esm.js"],"sourcesContent":["/*!\n * Splide.js\n * Version  : 3.2.1\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    init();\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n  function init() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    if (isNavigation) {\n      const idx = isClone ? slideIndex : index;\n      const label = format(options.i18n.slideX, idx + 1);\n      const controls = Splide2.splides.map((splide) => splide.root.id).join(\" \");\n      setAttribute(slide, ARIA_LABEL, label);\n      setAttribute(slide, ARIA_CONTROLS, controls);\n      setAttribute(slide, ROLE, \"menuitem\");\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    return Splide2.index === index;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    vertical = options.direction === TTB;\n    style(Splide2.root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    style(track, \"height\", cssTrackHeight());\n    Slides.style(resolve(\"marginRight\"), unit(options.gap));\n    Slides.style(\"width\", cssSlideWidth() || null);\n    setSlidesHeight();\n    emit(EVENT_RESIZED);\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`, true))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let waiting;\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy() && !Components2.Drag.isDragging()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      const looping = dest !== index;\n      waiting = looping || options.waitForTransition;\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Components2.Transition.start(dest, () => {\n        looping && jump(index);\n        waiting = false;\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n  function loop(position) {\n    if (!waiting && Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= sign(excess) * size * ceil(abs(excess) / size);\n    return position;\n  }\n  function cancel() {\n    waiting = false;\n    translate(getPosition());\n    Components2.Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return !!waiting;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      if (isLoop) {\n        index = clamp(control, -perPage, slideCount + perPage - 1);\n      } else {\n        index = clamp(control, 0, getEnd());\n      }\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!isLoop && !incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Elements } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  const listenerOptions = { passive: false, capture: true };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const isTouch = isTouchEvent(e);\n      if (isTouch || !e.button) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      if (dragging) {\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        Move.translate(basePosition + constrain(coordOf(e) - coordOf(baseEvent)));\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        const diff = abs(coordOf(e) - coordOf(baseEvent));\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = diff > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Components2.Elements;\n  const { resolve } = Components2.Direction;\n  let target;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, () => {\n      destroy();\n      init();\n    });\n  }\n  function init() {\n    const { keyboard = \"global\" } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, \"keydown\");\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function onKeydown(e) {\n    const { key } = e;\n    const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n    if (normalizedKey === resolve(\"ArrowLeft\")) {\n      Splide2.go(\"<\");\n    } else if (normalizedKey === resolve(\"ArrowRight\")) {\n      Splide2.go(\">\");\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { splides } = Splide2;\n  const { list } = Components2.Elements;\n  function mount() {\n    if (options.isNavigation) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n  }\n  function sync() {\n    const processed = [];\n    splides.concat(Splide2).forEach((splide, index, instances) => {\n      EventInterface(splide).on(EVENT_MOVE, (index2, prev, dest) => {\n        instances.forEach((instance) => {\n          if (instance !== splide && !includes(processed, splide)) {\n            processed.push(instance);\n            instance.go(instance.is(LOOP) ? dest : index2);\n          }\n        });\n        empty(processed);\n      });\n    });\n  }\n  function navigate() {\n    const { on, emit } = EventInterface(Splide2);\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n    }\n  }\n  function onWheel(e) {\n    const { deltaY } = e;\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push(splide);\n    splide.splides.push(this);\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      css += `#${this.id} ${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      const height = this.cssSlideHeight(options);\n      if (height) {\n        Style2.rule(selector, \"height\", height, width);\n      } else {\n        Style2.rule(selector, \"padding-top\", this.cssSlidePadding(options), width);\n      }\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssSlidePadding(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${heightRatio * 100}%` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n"],"names":["$8408af78a75fdac5$var$PROJECT_CODE","$8408af78a75fdac5$var$DATA_ATTRIBUTE","$8408af78a75fdac5$var$STATES","$8408af78a75fdac5$var$empty","array","length","$8408af78a75fdac5$var$isObject","subject","$8408af78a75fdac5$var$isNull","$8408af78a75fdac5$var$isArray","Array","isArray","$8408af78a75fdac5$var$isString","$8408af78a75fdac5$var$isUndefined","$8408af78a75fdac5$var$isHTMLElement","HTMLElement","$8408af78a75fdac5$var$toArray","value","$8408af78a75fdac5$var$forEach","values","iteratee","forEach","$8408af78a75fdac5$var$includes","indexOf","$8408af78a75fdac5$var$push","items","push","$8408af78a75fdac5$var$arrayProto","prototype","$8408af78a75fdac5$var$slice","arrayLike","start","end","slice","call","$8408af78a75fdac5$var$toggleClass","elm","classes","add","name","classList","$8408af78a75fdac5$var$addClass","split","$8408af78a75fdac5$var$append","parent","children","appendChild","bind","$8408af78a75fdac5$var$before","nodes","ref","node","parentNode","insertBefore","$8408af78a75fdac5$var$matches","selector","matches","$8408af78a75fdac5$var$children","filter","child","$8408af78a75fdac5$var$child","firstElementChild","$8408af78a75fdac5$var$forOwn","object","right","keys","Object","reverse","i","key","$8408af78a75fdac5$var$assign","arguments","source","$8408af78a75fdac5$var$merge","$8408af78a75fdac5$var$removeAttribute","attrs","attr","removeAttribute","$8408af78a75fdac5$var$setAttribute","value2","setAttribute","String","$8408af78a75fdac5$var$create","tag","document","createElement","$8408af78a75fdac5$var$style","prop","getComputedStyle","style","style2","$8408af78a75fdac5$var$display","display2","$8408af78a75fdac5$var$getAttribute","getAttribute","$8408af78a75fdac5$var$hasClass","className","contains","$8408af78a75fdac5$var$rect","target","getBoundingClientRect","$8408af78a75fdac5$var$remove","removeChild","$8408af78a75fdac5$var$parseHtml","html","DOMParser","parseFromString","body","$8408af78a75fdac5$var$prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","$8408af78a75fdac5$var$query","querySelector","$8408af78a75fdac5$var$queryAll","querySelectorAll","$8408af78a75fdac5$var$removeClass","$8408af78a75fdac5$var$unit","$8408af78a75fdac5$var$assert","condition","message","Error","$8408af78a75fdac5$var$nextTick","callback","setTimeout","$8408af78a75fdac5$var$noop","$8408af78a75fdac5$var$raf","func","requestAnimationFrame","min","$8408af78a75fdac5$var$min","max","$8408af78a75fdac5$var$max","floor","$8408af78a75fdac5$var$floor","ceil","$8408af78a75fdac5$var$ceil","abs","$8408af78a75fdac5$var$abs","Math","$8408af78a75fdac5$var$between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","$8408af78a75fdac5$var$clamp","x","y","$8408af78a75fdac5$var$sign","$8408af78a75fdac5$var$format","string","replacements","replacement","replace","$8408af78a75fdac5$var$pad","$8408af78a75fdac5$var$ids","$8408af78a75fdac5$var$uniqueId","prefix","$8408af78a75fdac5$export$d300dc1a2634364b","$8408af78a75fdac5$export$d8dac49b4532735a","$8408af78a75fdac5$export$2aa493d7c3275167","$8408af78a75fdac5$export$fe5802204b967f0d","$8408af78a75fdac5$export$5adb665701eda1ce","$8408af78a75fdac5$export$6d5af59619d10e6a","$8408af78a75fdac5$export$7f4701ac5e05e39f","$8408af78a75fdac5$export$db40ab7c0855fa5c","$8408af78a75fdac5$export$7e019dae5103a285","$8408af78a75fdac5$export$d637eba1e9e28482","$8408af78a75fdac5$export$5759b722663722e8","$8408af78a75fdac5$export$49801896908b5e33","$8408af78a75fdac5$export$ff8164bff3202b9","$8408af78a75fdac5$export$88c4cf7419e470cd","$8408af78a75fdac5$export$84015c33508f94ec","$8408af78a75fdac5$export$9f64346e17f0ec8e","$8408af78a75fdac5$export$f188226459c8a3ff","Splide2","event","listeners","unbind","targets","events","forEachEvent","event2","listener","removeEventListener","destroy","data","offBy","on","priority","off","emit","options","addEventListener","$8408af78a75fdac5$export$46ad21b25b6dccf0","interval","onInterval","onUpdate","limit","now","Date","startTime","id","rate","paused","count","update","elapsed","pause","cancel","cancelAnimationFrame","resume","$8408af78a75fdac5$export$efff0f5979573c99","duration","apply","this","$8408af78a75fdac5$var$TTB","$8408af78a75fdac5$var$ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","width","left","X","Y","ArrowLeft","ArrowRight","$8408af78a75fdac5$var$Direction","Components2","axisOnly","direction","$8408af78a75fdac5$export$93b21159ad85c843","$8408af78a75fdac5$export$8d922915837a38d3","$8408af78a75fdac5$export$2c1ba4a4f1aa4947","$8408af78a75fdac5$export$a26cbd955fecf11e","$8408af78a75fdac5$export$516e7d18e13a2dca","$8408af78a75fdac5$export$58ea3db24c33b76","$8408af78a75fdac5$export$4885afd7098a65c2","$8408af78a75fdac5$export$cbf8e5a0ab95eda3","$8408af78a75fdac5$export$72d36ecf3758cb4b","$8408af78a75fdac5$export$e423ac4972f5e196","$8408af78a75fdac5$export$457a2d20827a2779","$8408af78a75fdac5$export$53ca4621bbab9a","$8408af78a75fdac5$export$d22ec4ccb7996ba2","$8408af78a75fdac5$export$49f9eaea10ebf193","$8408af78a75fdac5$export$ba41d43e4a419565","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","$8408af78a75fdac5$var$ROLE","$8408af78a75fdac5$var$ARIA_CONTROLS","$8408af78a75fdac5$var$ARIA_CURRENT","$8408af78a75fdac5$var$ARIA_LABEL","$8408af78a75fdac5$var$ARIA_HIDDEN","$8408af78a75fdac5$var$TAB_INDEX","$8408af78a75fdac5$var$ARIA_ORIENTATION","$8408af78a75fdac5$var$ALL_ATTRIBUTES","$8408af78a75fdac5$var$SLIDE","$8408af78a75fdac5$var$LOOP","$8408af78a75fdac5$var$FADE","$8408af78a75fdac5$var$Slide$1","index","slideIndex","destroyEvents","Components","root","isNavigation","updateOnMove","resolve","Direction","styles","isClone","container","focusableNodes","destroyed","onMove","dest","updateActivity","currIndex","isActive","updateVisibility","is","trackRect","Elements","track","slideRect","isVisible","active","visible","ariaHidden","slideFocus","idx","label","i18n","slideX","controls","splides","map","splide","join","init","type","useContainer","from","distance","diff","rewind","$8408af78a75fdac5$var$PATH","$8408af78a75fdac5$var$POINTER_MOVE_EVENTS","$8408af78a75fdac5$var$POINTER_UP_EVENTS","$8408af78a75fdac5$var$IE_ARROW_KEYS","$8408af78a75fdac5$var$SRC_DATA_ATTRIBUTE","$8408af78a75fdac5$var$SRCSET_DATA_ATTRIBUTE","$8408af78a75fdac5$var$IMAGE_SELECTOR","$8408af78a75fdac5$var$TRIGGER_KEYS","$8408af78a75fdac5$var$ComponentConstructors","freeze","__proto__","Options","throttledObserve","observe","initialOptions","points","currPoint","completely","item","predicate","item2","point","newOptions","breakpoints","state","mount","onMatch","JSON","parse","isMin","mediaQuery","sort","n","m","matchMedia","elements","slides","slider","list","setup","autoplay","find","bar","play","collect","identify","getClasses","refresh","drag","$8408af78a75fdac5$var$DEFAULT_EVENT_PRIORITY","Slides","Slides2","register","forEach$1","Slide2","get","excludeClones","matcher","Slide1","Controller","toIndex","hasFocus","perPage","images","img","observeImages","remove","Layout","getAt","vertical","cssPadding","resize","height","cssHeight","cssTrackHeight","gap","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","Slide","getGap","parseFloat","window","Clones","clones","cloneCount","computeCloneCount","isHead","cloneNode","cloneDeep","generate","clones2","fixedSize","div","$8408af78a75fdac5$var$measure","flickMaxPages","Move","slideSize","getPadding","listSize","sliderSize","orient","waiting","reposition","isBusy","Drag","isDragging","Scroll","jump","translate","toPosition","position","preventLoop","transform","getPosition","exceededMin","exceededLimit","exceededMax","shift","loop","backwards","excess","getLimit","size","trimming","focus","offset","trimSpace","trim","getEnd","set","looping","waitForTransition","Transition","go","minDistance","Infinity","isEnough","getLength","isLoop","isSlide","slideCount","perMove","prevIndex","scroll","destination","useIndex","snap","toDest","setIndex","getNext","getAdjacent","getPrev","computeDestIndex","epsilon","incremental","toPage","closest","control","allowSameIndex","indicator","match","useScroll","speed","move","Arrows","created","wrapper","createArrow","listen","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","isPaused","hovered","focused","initButton","forPause","button","resetProgress","manual","autoToggle","pauseOnHover","pauseOnFocus","Cover","cover","src","toggle","scrollCallback","suppressConstraint","friction","clear","onScrolled","t","easingFunc","pow","easing","listenerOptions","passive","capture","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","clickPrevented","hasExceeded","disable","onPointerDown","isTouch","isTouchEvent","onPointerMove","onPointerUp","save","cancelable","expired","timeOf","exceeded","coordOf","dragMinThreshold","thresholds","mouse","touch","isSliderDirection","velocity","base","diffCoord","diffTime","isFlick","computeVelocity","flickPower","computeDestination","onClick","orthogonal","touches","timeStamp","TouchEvent","Keyboard","keyboard","onKeydown","normalizedKey","LazyLoad","isSequential","lazyLoad","preloadPages","_Slide","isWithin","load","_img","error","_spinner","loadNext","onLoad","srcset","parentElement","Pagination","getIndex","li","class","getIn","text","pageX","createPagination","preventScroll","curr","Sync","navigate","processed","concat","instances","index2","instance","sync","Wheel","onWheel","deltaY","wheel","$8408af78a75fdac5$var$DEFAULTS","$8408af78a75fdac5$var$Fade","done","$8408af78a75fdac5$var$Slide","endCallback","transition","rewindSpeed","getSpeed","$8408af78a75fdac5$var$_Splide","handlers","namespace","eventHandlers","handler","_key","_namespace","eventNS","fragments","_event","_callback","_priority","handler1","handler2","$8408af78a75fdac5$export$5087227eb54526","initialState","states","$8408af78a75fdac5$export$7254cc27399e90bd","_options","_Extensions","defaults","Extensions","_Components","_Transition","Component","component","$8408af78a75fdac5$export$24494c7438c070bf","STATES"],"version":3,"file":"index.3a915182.js.map"}